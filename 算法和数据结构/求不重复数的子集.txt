leetcode 78:
解集不能包含重复的子集。
示例:
输入: nums = [1,2,3]
输出:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]

思路：使用dfs，先取1个，再此基础上取第二个，注意用start来标识起点。

class Solution {
    private List<List<Integer>> result = new ArrayList();
    private int n;
    
    private void dfs(int[] nums, List<Integer> selected, int start) {
        if (start == n) {
            return;
        }
        for (int i = start; i < n; i++) {
            List<Integer> newSelected = new ArrayList<>();
            newSelected.addAll(selected);
            newSelected.add(nums[i]);
            result.add(newSelected);
            dfs(nums, newSelected, i+1);
        }
    }
    
    public List<List<Integer>> subsets(int[] nums) {
        result.clear();
        List<Integer> kong = new ArrayList<Integer>();
        if (nums == null || nums.length == 0) {
            this.result.add(kong);
            return this.result;
        }
        this.n = nums.length;
        dfs(nums, kong, 0);
        result.add(kong);
        return result;
    }
}