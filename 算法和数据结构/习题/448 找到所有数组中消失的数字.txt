
主要是要利用数组下标，因为数组中数字为1-n。
将所有正数作为数组下标，置对应数组值为负值。那么，仍为正数的位置即为（未出现过）消失的数字。
需要注意，已经被置为复数的，也要将其正数对应的下标置为负数：
比如 5，4，6，7，9，3，7，5，6
第一步5，4，6，7，-9，3，7，5，6
等第5步到-9时
需要将 9 - 1 = 8下标的数据6置为-6，表示第8个位置有对应数据。

func findDisappearedNumbers(nums []int) []int {
    for _,num := range nums {
        index := -1
        if num > 0 {
            index = num - 1
        } else if (num < 0)  {
            index = -1 * num - 1
        }
       
        if index >= 0 && nums[index] > 0 {
            nums[index] = -1 * nums[index]
        }
    }

    res := []int{}
    for i,num := range nums {
        if (num > 0) {
            res = append(res, i + 1)
        }
    }
    
    return res
}